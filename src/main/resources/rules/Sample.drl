package com.sample;
 
import com.model.Room;
import com.model.Sprinkler;
import com.model.Alarm;
import com.model.Fire;
import com.model.Temperature;

rule "Checking high temperatures"
when
	Temperature( r : room, value > 60 )
then
    insert( new Fire( r ) );
    System.out.println( "Fire on the room: " + r.getName() );
end

rule "Checking normal temperatures"
when
	Temperature( r : room, value < 60 )
	fire : Fire( room == r  )
then
    retract( fire );
    System.out.println( "There's no fire on the room: " + r.getName() + "anymore ");
end


rule "When there is a fire turn on the sprinkler"
when
	Fire( r : room )
   	sprinkler : Sprinkler( room.name == r.name, on == false )
then
    modify( sprinkler ) { setOn( true ) };
    System.out.println( "Turn on the sprinkler for room " + r.getName() );
end
 
rule "When the fire is gone turn off the sprinkler"
when
    r : Room()
    sprinkler : Sprinkler( room.name == r.name, on == true )
    not Fire( room == r )
then
    modify( sprinkler ) { setOn( false ) };
    System.out.println( "Turn off the sprinkler for room " + r.getName() );
end

rule "Raise the alarm when we have one or more fires"
when
    exists Fire()
then
    insert( new Alarm() );
    System.out.println( "Raise the alarm" );
end

rule "Cancel the alarm when all the fires have gone"
when
    not Fire()
    $alarm : Alarm()
then
    retract( $alarm );
    System.out.println( "Cancel the alarm" );
end

rule "Status output when things are ok"
when
    not Alarm()
    not Sprinkler( on == true ) 
then
    System.out.println( "Everything is ok" );
end

